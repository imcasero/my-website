---

---

<button
  id="theme-toggle"
  class="p-2 bg-accent-light dark:bg-accent-dark rounded-lg"
>
  <span id="theme-icon" class="text-primary">ðŸŒž</span>
</button>

<script>
  // Get elements from the DOM
  const themeToggleButton = document.getElementById("theme-toggle");
  const themeIcon = document.getElementById("theme-icon");

  /**
   * Function to set the theme.
   * @param {boolean} isDarkMode - Indicates whether dark mode is active.
   */
  const setTheme = (isDarkMode: boolean) => {
    // Add or remove the "dark" class based on the state
    document.documentElement.classList.toggle("dark", isDarkMode);

    // Update the icon, if the element exists
    if (themeIcon) {
      themeIcon.textContent = isDarkMode ? "ðŸŒ™" : "ðŸŒž";
    }

    // Save the user's preference in localStorage
    localStorage.setItem("theme", isDarkMode ? "dark" : "light");
  };

  /**
   * Determines the initial theme state.
   * @returns {boolean} true if dark mode should be enabled.
   */
  const getInitialTheme = () => {
    const storedTheme = localStorage.getItem("theme");
    if (storedTheme === "dark") return true;
    if (storedTheme === "light") return false;

    // If no preference is stored, use the system preference
    return window.matchMedia("(prefers-color-scheme: dark)").matches;
  };

  /**
   * Initializes the theme and sets up the button listener.
   */
  const initializeTheme = () => {
    // Set the initial theme
    const isDarkMode = getInitialTheme();
    setTheme(isDarkMode);

    // Add a click listener to the toggle button, if it exists
    if (themeToggleButton) {
      themeToggleButton.addEventListener("click", () => {
        const isDarkMode = !document.documentElement.classList.contains("dark");
        setTheme(isDarkMode);
      });
    } else {
      console.warn("The 'theme-toggle' button was not found in the DOM.");
    }
  };

  // Execute the initialization
  initializeTheme();
</script>
