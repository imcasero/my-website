---
import Briefcase from "@assets/icons/Briefcase.astro";
import Card from "@components/shared/Card.astro";
import { getCollection, render, type CollectionEntry } from "astro:content";

interface Experience {
  job: string;
  startDate: string;
  endDate: string;
  company: string;
  website: string;
  description: string;
  techs: string[];
}

const experiences: CollectionEntry<"experiences">[] =
  await getCollection("experiences");

const sortedExperiences = experiences.sort((a, b) => {
  const dateA = new Date(a.data.startDate).getTime();
  const dateB = new Date(b.data.startDate).getTime();
  return dateB - dateA;
});

const renderedExperiences = await Promise.all(
  sortedExperiences.map(async (experience, index) => {
    const { Content } = await render(experience);
    return { experience, index, Content };
  })
);
---

<Card>
  <h2 class="font-semibold text-lg mb-6">Career</h2>
  <article class="relative flex flex-col gap-10">
    {
      renderedExperiences.map(({ experience, index, Content }) => (
        <div class="flex items-start relative">
          <div class="flex flex-col items-center mr-6 relative">
            <div class="rounded-full p-1 border-primary/50 shadow-sm shadow-primary/10 border-2 bg-white z-10 absolute top-1 items-center text-primary">
              <Briefcase />
            </div>
            <hr
              id={`line-${index}`}
              class={`absolute top-4 bottom-0 bg-primary ${
                index === renderedExperiences.length - 1
                  ? "hidden"
                  : "w-[0.5px]"
              }`}
            />
          </div>

          <div class="flex-1">
            <h3 class="font-semibold text-lg">
              {experience.data.job} -
              <a
                class="relative text-sm font-normal text-muted-light dark:text-muted-dark transition-colors duration-200 group"
                href={experience.data.website}
                target="_blank"
              >
                <span class="absolute inset-0 bg-primary opacity-0 group-hover:opacity-10 group-hover:blur-sm transition-all duration-300" />
                {experience.data.company}
              </a>
            </h3>
            <p class="text-sm text-muted-light dark:text-muted-dark mb-2">
              {experience.data.startDate} - {experience.data.endDate}
            </p>
            <div class="prose dark:prose-invert text-sm">
              <Content />
            </div>
          </div>
        </div>
      ))
    }
  </article>
</Card>

<script>
  const adjustLineHeights = () => {
    const lines = document.querySelectorAll("hr[id^='line-']");

    const screenWidth = window.innerWidth;

    let height;
    if (screenWidth <= 425) {
      height = 450;
    } else if (screenWidth > 425 && screenWidth < 768) {
      height = 350;
    } else {
      height = 250;
    }

    lines.forEach((line) => {
      const hrLine = line as HTMLHRElement;
      hrLine.style.height = `calc(100% + ${height}px)`;
    });
  };

  window.addEventListener("load", adjustLineHeights);
  window.addEventListener("resize", adjustLineHeights);
</script>
